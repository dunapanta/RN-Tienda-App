164 Distribucion del proyecto
Dependencias que instalo
yarn add redux react-redux
yarn add react-navigation
yarn add react-navigation-header-buttons
yarn add react-navigation-stack
expo install react-native-gesture-handler react-native-reanimated

165 ProductOverviewScreen
Se presentan todos los productos que se pueden ordenar
defini modelo de productos
configuro redux
copio dummy data

166 Utilizo useSelector en ProductsOverview para tener los datos del store
 const products = useSelector( state => state.products.availableProducts)
 lo utilizo en Flatlistya que requiere un array para funcionar
 Defino los colores en la carpeta constants
 Ahora creo el Navigator en el archivo ShopNavigator.js

 const ProductsNavigator = createStackNavigator({
    ProductsOverview: ProductsOverviewScreen
}, {
    defaultNavigationOptions: {
        headerStyle:{
            backgrondColor: Platform.OS === 'android' ? Colors.primary : ''
        },
        headerTintColor: Platform.OS === 'android' ? 'black' : Colors.primary,

    }
})
 defaultNavigationOptions ---> se aplica para todas las sreens
 selo exporta con la funciona createAppContainer
 export default createAppContainer(ProductsNavigator)
 y lo incluyo en App.js asi

 <Provider store={store}>
    <ShopNavigator />
</Provider>

167 Creo componente ProductItem
creo estilos y lo paso a Flatlist
en el caso de la imagenes siempre deben tener width y heigth
y se coloca overflow: 'hidden' para que los hijos no se sobrepongan a los estilos definidos en el padre ejemplo borderRadius 

167 Comienzo a trabajar con ProductDetailScreen
lo añado a ShopNavigation 
IMPORTANTE RECODAR que el primer screen pasado a ProductsNavigator es con el que se inicializa la app
agrego la navegacion en ProductOverviewScreen

168 Agrego la navegacion y paso productId, title por medio de navigation
para encontrarlo en el state de redux
const selectedProduct = useSelector(
        state => state.products.availableProducts.find(p => p.id === productId) )

agrego TouchableOpacity en componente ProductItem para poder navegar haciendo tab en cualquier parte del mismo
en android pondo TouchabeNativeFeedback y se añade useForeground para que la imagen tambien tenga el efecto ripple
<Touchable onPress={onViewDetail}  background={TouchableNativeFeedback.Ripple(Colors.secondaryLight, true)} useForeground>